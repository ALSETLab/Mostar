#1
char Aclass(3,32)
Adymosim
1.4
Final state generated by Dymosim


#    Experiment parameters
double experiment(7,1)
       1                   # StartTime    Time at which integration starts
                           #              (and linearization and trimming time)
       2                   # StopTime     Time at which integration stops
       0                   # Increment    Communication step size, if > 0
     500                   # nInterval    Number of communication intervals, if > 0
 1.0000000000000000E-004   # Tolerance    Relative precision of signals for
                           #              simulation, linearization and trimming
       0                   # MaxFixedStep Maximum step size of fixed step size
                           #              integrators, if > 0.0
       8                   # Algorithm    Integration algorithm as integer (1...28)
                           #
                           #             | model|       |        | dense | state |
                           # Algorithm   | typ  | stiff | order  | output| event |
                           # ------------+------+-------+--------+-------+-------+
                           #  1 | deabm  |  ode |   no  |  1-12  |  yes  |   no  |
                           #  2 | lsode1 |  ode |   no  |  1-12  |  yes  |   no  |
                           #  3 | lsode2 |  ode |  yes  |  1-5   |  yes  |   no  |
                           #  4 | lsodar |  ode |  both |1-12,1-5|  yes  |  yes  |
                           #  5 | dopri5 |  ode |   no  |   5    |   no  |   no  |
                           #  6 | dopri8 |  ode |   no  |   8    |   no  |   no  |
                           #  7 | grk4t  |  ode |  yes  |   4    |   no  |   no  |
                           #  8 | dassl  |  dae |  yes  |  1-5   |  yes  |  yes  |
                           #  9 | odassl | hdae |  yes  |  1-5   |  yes  |  yes  |
                           # 10 | mexx   | hdae |   no  |  2-24  |   no  |   no  |
                           # 11 | euler  |  ode |   no  |   1    |   no  |  yes  |
                           # 12 | rkfix2 |  ode |   no  |   2    |   no  |  yes  |
                           # 13 | rkfix3 |  ode |   no  |   3    |   no  |  yes  |
                           # 14 | rkfix4 |  ode |   no  |   4    |   no  |  yes  |
                           #>=14| others |  ode |yes/no |  2-5   |   yes |  yes  |
                           # ---+--------+------+-------+--------+-------+-------+
                           # euler and rkfix have fixed stepsize.


#    Method tuning parameters
double method(27,1)
       1                   # grid     type of communication time grid, defined by
                           #          = 1: equidistant points ("Increment/nInterval")
                           #          = 2: vector of grid points ("tgrid")
                           #          = 3: variable step integrator (automatically)
                           #          = 4: model (call of "increment" in Dymola, e.g.
                           #                      incr=Time > 2 then 0 else 0.1
                           #                      dummy=increment(incr))
                           #          grid = 1,3 is stopped by "StopTime"
                           #          grid = 2   is stopped by "tgrid(last)"
                           #          grid = 4   runs forever (stopped by model)
       1                   # nt       Use every NT time instant, if grid = 3
       3                   # dense    1/2/3 restart/step/interpolate GRID points
       1                   # evgrid   0/1 do not/save event points in comm. time grid
       1                   # evu      0/1 U-discontinuity does not/trigger events
       0                   # evuord       U-discontinuity order to consider (0,1,...)
       0                   # error    0/1/2 One message/warning/error messages
       0                   # jac      0/1 Compute jacobian numerically/by BLOCKJ
       0                   # xd0c     0/1 Compute/set XD0
       0                   # f3       0/1 Ignore/use F3 of HDAE (= index 1)
       0                   # f4       0/1 Ignore/use F4 of HDAE (= index 2)
       0                   # f5       0/1 Ignore/use F5 of HDAE (= invar.)
       0                   # debug    flags for debug information (1<<0 uses pdebug) 
     100                   # pdebug       priority of debug information (1...100)
       0                   # fmax     Maximum number of evaluations of BLOCKF, if > 0
       0                   # ordmax   Maximum allowed integration order, if > 0
       0                   # hmax     Maximum absolute stepsize, if > 0
       0                   # hmin     Minimum absolute stepsize, if > 0 (use with care!)
       0                   # h0       Stepsize to be attempted on first step, if > 0
 2.0000000000000000E-014   # teps     Bound to check, if 2 equal time instants
 1.0000000000000000E-010   # eveps    Hysteresis epsilon at event points
      20                   # eviter   Maximum number of event iterations
 9.9999999999999995E-007   # delaym   Minimum time increment in delay buffers
       1                   # fexcep   0/1 floating exception crashes/stops dymosim
       1                   # tscale   clock-time = tscale*simulation-time, if grid = 5
                           #          > 1: simulation too slow
                           #          = 1: simulation-time = real-time
                           #          < 1: simulation too fast
       1                   # shared   (not used)
    2473                   # memkey   (not used)


#    Output parameters
int settings(13,1)
 0                         # lprec    0/1 do not/store result data in double
 1                         # lx       0/1 do not/store x  (state variables)
 1                         # lxd      0/1 do not/store xd (derivative of states)
 1                         # lu       0/1 do not/store u  (input     signals)
 1                         # ly       0/1 do not/store y  (output    signals)
 0                         # lz       0/1 do not/store z  (indicator signals)
 1                         # lw       0/1 do not/store w  (auxiliary signals)
 1                         # la       0/1 do not/store a  (alias     signals)
 0                         # lperf    0/1 do not/store performance indicators
 0                         # levent   0/1 do not/store event point
 1                         # lres     0/1 do not/store results on result file
 0                         # lshare   0/1 do not/store info data for shared memory on dsshare.txt
 1                         # lform    0/1 ASCII/Matlab-binary storage format of results
                           #              (for simulation/linearization; not for trimming)


#    Names of initial variables
char initialName(257,43)
simpleMotor.inductor.v
simpleMotor.inductor.i
simpleMotor.inductor.der(i)
simpleMotor.inductor.n.v
simpleMotor.inductor.L
simpleMotor.R
simpleMotor.resistor.R
simpleMotor.resistor.T_ref
simpleMotor.resistor.alpha
simpleMotor.resistor.v
simpleMotor.resistor.useHeatPort
simpleMotor.resistor.T
simpleMotor.resistor.LossPower
simpleMotor.resistor.R_actual
simpleMotor.R_trs
simpleMotor.X_s
simpleMotor.hysteresis.R
simpleMotor.hysteresis.T_ref
simpleMotor.hysteresis.alpha
simpleMotor.hysteresis.v
simpleMotor.hysteresis.i
simpleMotor.hysteresis.p.v
simpleMotor.hysteresis.n.v
simpleMotor.hysteresis.useHeatPort
simpleMotor.hysteresis.T
simpleMotor.hysteresis.LossPower
simpleMotor.hysteresis.R_actual
simpleMotor.R_hyst
simpleMotor.p1.v
simpleMotor.emf.useSupport
simpleMotor.emf.k
simpleMotor.emf.v
simpleMotor.emf.i
simpleMotor.emf.phi
simpleMotor.emf.der(phi)
simpleMotor.emf.w
simpleMotor.emf.p.v
simpleMotor.emf.n.v
simpleMotor.emf.fixed.phi0
simpleMotor.k
simpleMotor.flange1.tau
simpleMotor.ground.p.v
simpleMotor.ground.p.i
simplifiedFuelCell.constantVoltage.V
simplifiedFuelCell.constantVoltage.n.v
simplifiedFuelCell.resistor.R
simplifiedFuelCell.resistor.T_ref
simplifiedFuelCell.resistor.alpha
simplifiedFuelCell.resistor.v
simplifiedFuelCell.resistor.n.v
simplifiedFuelCell.resistor.useHeatPort
simplifiedFuelCell.resistor.T
simplifiedFuelCell.resistor.LossPower
simplifiedFuelCell.resistor.R_actual
simplifiedFuelCell.inductor.v
simplifiedFuelCell.inductor.i
simplifiedFuelCell.inductor.der(i)
simplifiedFuelCell.inductor.L
simplifiedFuelCell.n1.i
simplifiedFuelCell.pin_p.v
simplifiedFuelCell.R
simplifiedFuelCell.L
simplifiedFuelCell.V
simplifiedFuelCell.constantVoltage1.V
simplifiedFuelCell.constantVoltage1.n.v
simplifiedFuelCell.ground.p.v
simplifiedFuelCell.ground.p.i
dcdc.RonTransistor
dcdc.GoffTransistor
dcdc.VkneeTransistor
dcdc.RonDiode
dcdc.GoffDiode
dcdc.VkneeDiode
dcdc.vDC1
dcdc.powerDC1
dcdc.dc_p2.v
dcdc.vDC2
dcdc.powerDC2
dcdc.useHeatPort
dcdc.T
dcdc.LossPower
dcdc.T_heatPort
dcdc.useConstantEnable
dcdc.constantEnable
dcdc.m
dcdc.enableLogic.useConstantEnable
dcdc.enableLogic.constantEnable
dcdc.enableLogic.m
dcdc.enableLogic.enableConstantSource.k
dcdc.enableLogic.booleanReplicator.nout
dcdc.andCondition_p.y
dcdc.fire_p
dcdc.transistor.v
dcdc.transistor.i
dcdc.transistor.Ron
dcdc.transistor.Goff
dcdc.transistor.Vknee
dcdc.transistor.useHeatPort
dcdc.transistor.T
dcdc.transistor.LossPower
dcdc.transistor.off
dcdc.transistor.s
dcdc.transistor.unitVoltage
dcdc.transistor.unitCurrent
dcdc.diode.v
dcdc.diode.Ron
dcdc.diode.Goff
dcdc.diode.Vknee
dcdc.diode.useHeatPort
dcdc.diode.T
dcdc.diode.LossPower
dcdc.diode.off
dcdc.diode.s
dcdc.diode.unitVoltage
dcdc.diode.unitCurrent
inverter.RonTransistor
inverter.GoffTransistor
inverter.VkneeTransistor
inverter.RonDiode
inverter.GoffDiode
inverter.VkneeDiode
inverter.dc_p.v
inverter.dc_n.v
inverter.vDC
inverter.powerDC
inverter.powerAC
inverter.useHeatPort
inverter.T
inverter.LossPower
inverter.T_heatPort
inverter.useConstantEnable
inverter.constantEnable
inverter.m
inverter.enableLogic.useConstantEnable
inverter.enableLogic.constantEnable
inverter.enableLogic.m
inverter.enableLogic.enableConstantSource.k
inverter.enableLogic.booleanReplicator.nout
inverter.andCondition_p.y
inverter.fire_p
inverter.andCondition_n.y
inverter.fire_n
inverter.transistor_p.v
inverter.transistor_p.i
inverter.transistor_p.Ron
inverter.transistor_p.Goff
inverter.transistor_p.Vknee
inverter.transistor_p.useHeatPort
inverter.transistor_p.T
inverter.transistor_p.LossPower
inverter.transistor_p.off
inverter.transistor_p.s
inverter.transistor_p.unitVoltage
inverter.transistor_p.unitCurrent
inverter.diode_p.v
inverter.diode_p.i
inverter.diode_p.Ron
inverter.diode_p.Goff
inverter.diode_p.Vknee
inverter.diode_p.useHeatPort
inverter.diode_p.T
inverter.diode_p.LossPower
inverter.diode_p.off
inverter.diode_p.s
inverter.diode_p.unitVoltage
inverter.diode_p.unitCurrent
inverter.transistor_n.v
inverter.transistor_n.i
inverter.transistor_n.Ron
inverter.transistor_n.Goff
inverter.transistor_n.Vknee
inverter.transistor_n.useHeatPort
inverter.transistor_n.T
inverter.transistor_n.LossPower
inverter.transistor_n.off
inverter.transistor_n.s
inverter.transistor_n.unitVoltage
inverter.transistor_n.unitCurrent
inverter.diode_n.v
inverter.diode_n.i
inverter.diode_n.Ron
inverter.diode_n.Goff
inverter.diode_n.Vknee
inverter.diode_n.useHeatPort
inverter.diode_n.T
inverter.diode_n.LossPower
inverter.diode_n.off
inverter.diode_n.s
inverter.diode_n.unitVoltage
inverter.diode_n.unitCurrent
inductor.v
inductor.i
inductor.der(i)
inductor.L
fan.inertia.J
fan.inertia.stateSelect
fan.inertia.der(phi)
fan.inertia.w
fan.inertia.der(w)
fan.inertia.a
fan.fixed.phi0
fan.J
pwm.useConstantDutyCycle
pwm.constantDutyCycle
pwm.f
pwm.startTime
pwm.notFire
pwm.const.k
pwm.limiter.uMax
pwm.limiter.uMin
pwm.limiter.strict
pwm.limiter.homotopyType
pwm.limiter.limitsAtInit
pwm.limiter.y
pwm.greaterEqual.u1
pwm.greaterEqual.u2
pwm.zeroOrderHold.samplePeriod
pwm.zeroOrderHold.startTime
pwm.zeroOrderHold.sampleTrigger
pwm.zeroOrderHold.firstTrigger
pwm.zeroOrderHold.ySample
pwm.sawtooth.amplitude
pwm.sawtooth.period
pwm.sawtooth.nperiod
pwm.sawtooth.offset
pwm.sawtooth.startTime
pwm.sawtooth.T_start
pwm.sawtooth.count
pwm1.useConstantDutyCycle
pwm1.constantDutyCycle
pwm1.f
pwm1.startTime
pwm1.const.k
pwm1.limiter.uMax
pwm1.limiter.uMin
pwm1.limiter.strict
pwm1.limiter.homotopyType
pwm1.limiter.limitsAtInit
pwm1.limiter.y
pwm1.greaterEqual.u1
pwm1.greaterEqual.u2
pwm1.zeroOrderHold.samplePeriod
pwm1.zeroOrderHold.startTime
pwm1.zeroOrderHold.sampleTrigger
pwm1.zeroOrderHold.firstTrigger
pwm1.zeroOrderHold.ySample
pwm1.sawtooth.amplitude
pwm1.sawtooth.period
pwm1.sawtooth.nperiod
pwm1.sawtooth.offset
pwm1.sawtooth.startTime
pwm1.sawtooth.T_start
pwm1.sawtooth.count
inductor1.v
inductor1.i
inductor1.der(i)
inductor1.L

double initialValue(257,6)
 -2 3.7892572716362970E+001       0                       0                
  6   256   # simpleMotor.inductor.v
 -2 4.8031751618975221E+002       0                       0                
  2   280   # simpleMotor.inductor.i
 -2 4.8018609954240389E+002       0                       0                
  3   256   # simpleMotor.inductor.der(i)
 -2       0                       0                       0                
  6   260   # simpleMotor.inductor.n.v
 -2 4.1000000000000002E-002       0                       0                
  6   256   # simpleMotor.inductor.L
 -1     149                       0                       0                
  1   280   # simpleMotor.R
 -2 9.9999999999999995E-007       0                       0                
  6   256   # simpleMotor.resistor.R
 -1 3.0014999999999998E+002       0                 1.0000000000000000E+100
  1   280   # simpleMotor.resistor.T_ref
 -1       0                       0                       0                
  1   280   # simpleMotor.resistor.alpha
 -2 4.8031751618975220E-004       0                       0                
  6   256   # simpleMotor.resistor.v
 -2       0                       0                       0                
  6   769   # simpleMotor.resistor.useHeatPort
 -2 3.0014999999999998E+002       0                 1.0000000000000000E+100
  6   256   # simpleMotor.resistor.T
 -2 2.3070491635869286E-001       0                       0                
  6   256   # simpleMotor.resistor.LossPower
 -2 9.9999999999999995E-007       0                       0                
  6   256   # simpleMotor.resistor.R_actual
 -1 9.9999999999999995E-007       0                       0                
  1   280   # simpleMotor.R_trs
 -1 4.1000000000000002E-002       0                       0                
  1   280   # simpleMotor.X_s
 -2     149                       0                       0                
  6   256   # simpleMotor.hysteresis.R
 -1 3.0014999999999998E+002       0                 1.0000000000000000E+100
  1   280   # simpleMotor.hysteresis.T_ref
 -1       0                       0                       0                
  1   280   # simpleMotor.hysteresis.alpha
 -2       0                       0                       0                
  6   256   # simpleMotor.hysteresis.v
 -2       0                       0                       0                
  6   256   # simpleMotor.hysteresis.i
 -2       0                       0                       0                
  6   260   # simpleMotor.hysteresis.p.v
 -2       0                       0                       0                
  6   260   # simpleMotor.hysteresis.n.v
 -2       0                       0                       0                
  6   769   # simpleMotor.hysteresis.useHeatPort
 -2 3.0014999999999998E+002       0                 1.0000000000000000E+100
  6   256   # simpleMotor.hysteresis.T
 -2       0                       0                       0                
  6   256   # simpleMotor.hysteresis.LossPower
 -2     149                       0                       0                
  6   256   # simpleMotor.hysteresis.R_actual
 -1     149                       0                       0                
  1   280   # simpleMotor.R_hyst
 -2 3.7893053033879163E+001       0                       0                
  6   260   # simpleMotor.p1.v
 -2       0                       0                       0                
  6   769   # simpleMotor.emf.useSupport
 -2 2.1000000000000001E-002       0                       0                
  6   256   # simpleMotor.emf.k
 -2       0                       0                       0                
  6   256   # simpleMotor.emf.v
 -2 4.8031751618975221E+002       0                       0                
  6   256   # simpleMotor.emf.i
 -2       0                       0                       0                
  6   256   # simpleMotor.emf.phi
 -2       0                       0                       0                
  6   256   # simpleMotor.emf.der(phi)
 -2       0                       0                       0                
  6   256   # simpleMotor.emf.w
 -2       0                       0                       0                
  6   260   # simpleMotor.emf.p.v
 -2       0                       0                       0                
  6   260   # simpleMotor.emf.n.v
 -1       0                       0                       0                
  1  1304   # simpleMotor.emf.fixed.phi0
 -1 2.1000000000000001E-002       0                       0                
  1   280   # simpleMotor.k
 -2 -1.0086667839984797E+001       0                       0                
  6   388   # simpleMotor.flange1.tau
 -2       0                       0                       0                
  6   260   # simpleMotor.ground.p.v
 -2 4.8031751618975221E+002       0                       0                
  6   388   # simpleMotor.ground.p.i
 -2     500                       0                       0                
  6   256   # simplifiedFuelCell.constantVoltage.V
 -2       0                       0                       0                
  6   260   # simplifiedFuelCell.constantVoltage.n.v
 -2     100                       0                       0                
  6   256   # simplifiedFuelCell.resistor.R
 -1 3.0014999999999998E+002       0                 1.0000000000000000E+100
  1   280   # simplifiedFuelCell.resistor.T_ref
 -1       0                       0                       0                
  1   280   # simplifiedFuelCell.resistor.alpha
 -2 1.5006792304759109E+000       0                       0                
  6   256   # simplifiedFuelCell.resistor.v
 -2 4.9849932076952410E+002       0                       0                
  6   260   # simplifiedFuelCell.resistor.n.v
 -2       0                       0                       0                
  6   769   # simplifiedFuelCell.resistor.useHeatPort
 -2 3.0014999999999998E+002       0                 1.0000000000000000E+100
  6   256   # simplifiedFuelCell.resistor.T
 -2 2.2520381527817723E-002       0                       0                
  6   256   # simplifiedFuelCell.resistor.LossPower
 -2     100                       0                       0                
  6   256   # simplifiedFuelCell.resistor.R_actual
 -2 -1.5006792484696803E+000       0                       0                
  6   256   # simplifiedFuelCell.inductor.v
 -2 1.5006792304759110E-002       0                       0                
  2   280   # simplifiedFuelCell.inductor.i
 -2 -1.8143850506582948E-001       0                       0                
  3   256   # simplifiedFuelCell.inductor.der(i)
 -2    1000                       0                       0                
  6   256   # simplifiedFuelCell.inductor.L
 -2 -4.8030250939744747E+002       0                       0                
  6   388   # simplifiedFuelCell.n1.i
 -2 5.0000000001799378E+002       0                       0                
  6   260   # simplifiedFuelCell.pin_p.v
 -1     100                       0                       0                
  1   280   # simplifiedFuelCell.R
 -1    1000                       0                       0                
  1   280   # simplifiedFuelCell.L
 -1     500                       0                       0                
  1   280   # simplifiedFuelCell.V
 -2     500                       0                       0                
  6   256   # simplifiedFuelCell.constantVoltage1.V
 -2       0                       0                       0                
  6   260   # simplifiedFuelCell.constantVoltage1.n.v
 -2       0                       0                       0                
  6   260   # simplifiedFuelCell.ground.p.v
 -2 -4.8031751618975221E+002       0                       0                
  6   388   # simplifiedFuelCell.ground.p.i
 -1 1.0000000000000001E-005       0                       0                
  1   280   # dcdc.RonTransistor
 -1 1.0000000000000001E-005       0                       0                
  1   280   # dcdc.GoffTransistor
 -1       0                       0                       0                
  1   280   # dcdc.VkneeTransistor
 -1 1.0000000000000001E-005       0                 1.0000000000000000E+100
  1   280   # dcdc.RonDiode
 -1 1.0000000000000001E-005       0                 1.0000000000000000E+100
  1   280   # dcdc.GoffDiode
 -1       0                       0                 1.0000000000000000E+100
  1   280   # dcdc.VkneeDiode
 -2 1.7993784240388777E-008       0                       0                
  6   256   # dcdc.vDC1
 -2 2.7002898287216206E-010       0                       0                
  6   256   # dcdc.powerDC1
 -2 4.9999999988591964E+002       0                       0                
  6   260   # dcdc.dc_p2.v
 -2 -1.1408036471038940E-007       0                       0                
  6   256   # dcdc.vDC2
 -2 1.5067066112950677E-009       0                       0                
  6   256   # dcdc.powerDC2
 -2       0                       0                       0                
  6   769   # dcdc.useHeatPort
 -2 2.9314999999999998E+002       0                 1.0000000000000000E+100
  6   256   # dcdc.T
 -2 1.7767354790982670E-009       0                       0                
  6   256   # dcdc.LossPower
 -2 2.9314999999999998E+002       0                 1.0000000000000000E+100
  6   256   # dcdc.T_heatPort
 -2       1                       0                       0                
  6   257   # dcdc.useConstantEnable
 -1       1                       0                       0                
  1   281   # dcdc.constantEnable
 -2       1                       1                 1.0000000000000000E+100
  6   258   # dcdc.m
 -2       1                       0                       0                
  6   257   # dcdc.enableLogic.useConstantEnable
 -2       1                       0                       0                
  6   257   # dcdc.enableLogic.constantEnable
 -2       1                       1                 1.0000000000000000E+100
  6   258   # dcdc.enableLogic.m
 -2       1                       0                       0                
  6   257   # dcdc.enableLogic.enableConstantSource.k
 -2       1                       0                       0                
  6   258   # dcdc.enableLogic.booleanReplicator.nout
 -2       1                       0                       0                
  6   321   # dcdc.andCondition_p.y
 -2       1                       0                       0                
  6   321   # dcdc.fire_p
 -2 1.7993782583535356E-008       0                       0                
  6   256   # dcdc.transistor.v
 -2 1.7993782583535355E-003       0                       0                
  6   256   # dcdc.transistor.i
 -2 1.0000000000000001E-005       0                 1.0000000000000000E+100
  6   256   # dcdc.transistor.Ron
 -2 1.0000000000000001E-005       0                 1.0000000000000000E+100
  6   256   # dcdc.transistor.Goff
 -2       0                       0                 1.0000000000000000E+100
  6   256   # dcdc.transistor.Vknee
 -2       0                       0                       0                
  6   769   # dcdc.transistor.useHeatPort
 -1 2.9314999999999998E+002       0                 1.0000000000000000E+100
  1   280   # dcdc.transistor.T
 -2 3.2377621166354027E-011       0                       0                
  6   256   # dcdc.transistor.LossPower
 -2       0                       0                       0                
  6   353   # dcdc.transistor.off
 -2 1.7993782583535355E-003       0                       0                
  6  1280   # dcdc.transistor.s
 -2       1                       0                       0                
  6   768   # dcdc.transistor.unitVoltage
 -2       1                       0                       0                
  6   768   # dcdc.transistor.unitCurrent
 -2 1.3207414046405576E-007       0                       0                
  6   256   # dcdc.diode.v
 -2 1.0000000000000001E-005       0                 1.0000000000000000E+100
  6   256   # dcdc.diode.Ron
 -2 1.0000000000000001E-005       0                 1.0000000000000000E+100
  6   256   # dcdc.diode.Goff
 -2       0                       0                 1.0000000000000000E+100
  6   256   # dcdc.diode.Vknee
 -2       0                       0                       0                
  6   769   # dcdc.diode.useHeatPort
 -1 2.9314999999999998E+002       0                 1.0000000000000000E+100
  1   280   # dcdc.diode.T
 -2 1.7443578579319130E-009       0                       0                
  6   256   # dcdc.diode.LossPower
 -2       0                       0                       0                
  6   353   # dcdc.diode.off
 -2 1.3207414046405574E-002       0                       0                
  6  1280   # dcdc.diode.s
 -2       1                       0                       0                
  6   768   # dcdc.diode.unitVoltage
 -2       1                       0                       0                
  6   768   # dcdc.diode.unitCurrent
 -1 1.0000000000000001E-005       0                       0                
  1   280   # inverter.RonTransistor
 -1 1.0000000000000001E-005       0                       0                
  1   280   # inverter.GoffTransistor
 -1       0                       0                       0                
  1   280   # inverter.VkneeTransistor
 -1 1.0000000000000001E-005       0                       0                
  1   280   # inverter.RonDiode
 -1 1.0000000000000001E-005       0                       0                
  1   280   # inverter.GoffDiode
 -1       0                       0                       0                
  1   280   # inverter.VkneeDiode
 -2 3.7893053165953347E+001       0                       0                
  6   260   # inverter.dc_p.v
 -2 3.7897856076966434E+001       0                       0                
  6   260   # inverter.dc_n.v
 -2 -4.8029110130869412E-003       0                       0                
  6   256   # inverter.vDC
 -2 -6.3434034377880496E-005       0                       0                
  6   256   # inverter.powerDC
 -2 -1.8200697114079394E+004       0                       0                
  6   256   # inverter.powerAC
 -2       0                       0                       0                
  6   769   # inverter.useHeatPort
 -2 2.9314999999999998E+002       0                 1.0000000000000000E+100
  6   256   # inverter.T
 -2 4.6138445816224527E+000       0                       0                
  6   256   # inverter.LossPower
 -2 2.9314999999999998E+002       0                 1.0000000000000000E+100
  6   256   # inverter.T_heatPort
 -2       1                       0                       0                
  6   257   # inverter.useConstantEnable
 -1       1                       0                       0                
  1   281   # inverter.constantEnable
 -2       1                       1                 1.0000000000000000E+100
  6   258   # inverter.m
 -2       1                       0                       0                
  6   257   # inverter.enableLogic.useConstantEnable
 -2       1                       0                       0                
  6   257   # inverter.enableLogic.constantEnable
 -2       1                       1                 1.0000000000000000E+100
  6   258   # inverter.enableLogic.m
 -2       1                       0                       0                
  6   257   # inverter.enableLogic.enableConstantSource.k
 -2       1                       0                       0                
  6   258   # inverter.enableLogic.booleanReplicator.nout
 -2       1                       0                       0                
  6   321   # inverter.andCondition_p.y
 -2       1                       0                       0                
  6   321   # inverter.fire_p
 -2       0                       0                       0                
  6   321   # inverter.andCondition_n.y
 -2       0                       0                       0                
  6   321   # inverter.fire_n
 -2 1.3207414045084832E-007       0                       0                
  6   256   # inverter.transistor_p.v
 -2 1.3207414045084832E-002       0                       0                
  6   256   # inverter.transistor_p.i
 -2 1.0000000000000001E-005       0                 1.0000000000000000E+100
  6   256   # inverter.transistor_p.Ron
 -2 1.0000000000000001E-005       0                 1.0000000000000000E+100
  6   256   # inverter.transistor_p.Goff
 -2       0                       0                 1.0000000000000000E+100
  6   256   # inverter.transistor_p.Vknee
 -2       0                       0                       0                
  6   769   # inverter.transistor_p.useHeatPort
 -1 2.9314999999999998E+002       0                 1.0000000000000000E+100
  1   280   # inverter.transistor_p.T
 -2 1.7443578575830408E-009       0                       0                
  6   256   # inverter.transistor_p.LossPower
 -2       0                       0                       0                
  6   353   # inverter.transistor_p.off
 -2 1.3207414045084832E-002       0                       0                
  6  1280   # inverter.transistor_p.s
 -2       1                       0                       0                
  6   768   # inverter.transistor_p.unitVoltage
 -2       1                       0                       0                
  6   768   # inverter.transistor_p.unitCurrent
 -2 -1.3207422819438059E-007       0                       0                
  6   256   # inverter.diode_p.v
 -2 -1.3207422819438060E-012       0                       0                
  6   256   # inverter.diode_p.i
 -2 1.0000000000000001E-005       0                 1.0000000000000000E+100
  6   256   # inverter.diode_p.Ron
 -2 1.0000000000000001E-005       0                 1.0000000000000000E+100
  6   256   # inverter.diode_p.Goff
 -2       0                       0                 1.0000000000000000E+100
  6   256   # inverter.diode_p.Vknee
 -2       0                       0                       0                
  6   769   # inverter.diode_p.useHeatPort
 -1 2.9314999999999998E+002       0                 1.0000000000000000E+100
  1   280   # inverter.diode_p.T
 -2 1.7443601753141318E-019       0                       0                
  6   256   # inverter.diode_p.LossPower
 -2       1                       0                       0                
  6   353   # inverter.diode_p.off
 -2 -1.3207422819438059E-007       0                       0                
  6  1280   # inverter.diode_p.s
 -2       1                       0                       0                
  6   768   # inverter.diode_p.unitVoltage
 -2       1                       0                       0                
  6   768   # inverter.diode_p.unitCurrent
 -2 -4.8030430872767543E-003       0                       0                
  6   256   # inverter.transistor_n.v
 -2 -4.8030430872767541E-008       0                       0                
  6   256   # inverter.transistor_n.i
 -2 1.0000000000000001E-005       0                 1.0000000000000000E+100
  6   256   # inverter.transistor_n.Ron
 -2 1.0000000000000001E-005       0                 1.0000000000000000E+100
  6   256   # inverter.transistor_n.Goff
 -2       0                       0                 1.0000000000000000E+100
  6   256   # inverter.transistor_n.Vknee
 -2       0                       0                       0                
  6   769   # inverter.transistor_n.useHeatPort
 -1 2.9314999999999998E+002       0                 1.0000000000000000E+100
  1   280   # inverter.transistor_n.T
 -2 2.3069222898237014E-010       0                       0                
  6   256   # inverter.transistor_n.LossPower
 -2       1                       0                       0                
  6   353   # inverter.transistor_n.off
 -2 -4.8030430872767534E-003       0                       0                
  6  1280   # inverter.transistor_n.s
 -2       1                       0                       0                
  6   768   # inverter.transistor_n.unitVoltage
 -2       1                       0                       0                
  6   768   # inverter.transistor_n.unitCurrent
 -2 4.8030430872767543E-003       0                       0                
  6   256   # inverter.diode_n.v
 -2 4.8030430872767539E+002       0                       0                
  6   256   # inverter.diode_n.i
 -2 1.0000000000000001E-005       0                 1.0000000000000000E+100
  6   256   # inverter.diode_n.Ron
 -2 1.0000000000000001E-005       0                 1.0000000000000000E+100
  6   256   # inverter.diode_n.Goff
 -2       0                       0                 1.0000000000000000E+100
  6   256   # inverter.diode_n.Vknee
 -2       0                       0                       0                
  6   769   # inverter.diode_n.useHeatPort
 -1 2.9314999999999998E+002       0                 1.0000000000000000E+100
  1   280   # inverter.diode_n.T
 -2 2.3069222898237012E+000       0                       0                
  6   256   # inverter.diode_n.LossPower
 -2       0                       0                       0                
  6   353   # inverter.diode_n.off
 -2 4.8030430872767539E+002       0                       0                
  6  1280   # inverter.diode_n.s
 -2       1                       0                       0                
  6   768   # inverter.diode_n.unitVoltage
 -2       1                       0                       0                
  6   768   # inverter.diode_n.unitCurrent
 -2 4.6210694671996629E+002       0                       0                
  6   256   # inductor.v
 -2 1.3207414046405574E-002       0                       0                
  6   256   # inductor.i
 -2 4.6210694671996612E+002       0                       0                
  6   256   # inductor.der(i)
 -1       1                       0                       0                
  1   280   # inductor.L
 -2       1                       0                 1.0000000000000000E+100
  6   256   # fan.inertia.J
 -2       3                       1                       5                
  6   770   # fan.inertia.stateSelect
 -2       0                       0                       0                
  6   256   # fan.inertia.der(phi)
 -2       0                       0                       0                
  6   256   # fan.inertia.w
 -2       0                       0                       0                
  6   256   # fan.inertia.der(w)
 -2       0                       0                       0                
  6   256   # fan.inertia.a
 -1       0                       0                       0                
  1   280   # fan.fixed.phi0
 -1       1                       0                       0                
  1   280   # fan.J
 -2       1                       0                       0                
  6   257   # pwm.useConstantDutyCycle
 -1 5.0000000000000000E-001       0                       0                
  1   280   # pwm.constantDutyCycle
 -1      10                       0                       0                
  1   280   # pwm.f
 -1       0                       0                       0                
  1   280   # pwm.startTime
 -2       0                       0                       0                
  6   321   # pwm.notFire
 -2 5.0000000000000000E-001       0                       0                
  6   256   # pwm.const.k
 -1       1                       0                       0                
  1   280   # pwm.limiter.uMax
 -1       0                       0                       0                
  1   280   # pwm.limiter.uMin
 -2       0                       0                       0                
  6   257   # pwm.limiter.strict
 -2       2                       1                       4                
  6   258   # pwm.limiter.homotopyType
 -2       1                       0                       0                
  6   257   # pwm.limiter.limitsAtInit
 -2 5.0000000000000000E-001       0                       0                
  6   256   # pwm.limiter.y
 -2       0                       0                       0                
  6   256   # pwm.greaterEqual.u1
 -2 5.0000000000000000E-001       0                       0                
  6   320   # pwm.greaterEqual.u2
 -2 1.0000000000000001E-001 1.0000000000000000E-013 1.0000000000000000E+100
  6   256   # pwm.zeroOrderHold.samplePeriod
 -2       0                       0                       0                
  6   256   # pwm.zeroOrderHold.startTime
 -2       0                       0                       0                
  6  1345   # pwm.zeroOrderHold.sampleTrigger
 -2       0                       0                       0                
  6  1353   # pwm.zeroOrderHold.firstTrigger
 -2 5.0000000000000000E-001       0                       0                
  6   328   # pwm.zeroOrderHold.ySample
 -2       1                       0                       0                
  6   256   # pwm.sawtooth.amplitude
 -2 1.0000000000000001E-001 9.9999999999999997E-061 1.0000000000000000E+100
  6   256   # pwm.sawtooth.period
 -2      -1                       0                       0                
  6   258   # pwm.sawtooth.nperiod
 -2       0                       0                       0                
  6   256   # pwm.sawtooth.offset
 -2       0                       0                       0                
  6   256   # pwm.sawtooth.startTime
 -2       1                       0                       0                
  6  1344   # pwm.sawtooth.T_start
 -2      10                       0                       0                
  6  1346   # pwm.sawtooth.count
 -2       1                       0                       0                
  6   257   # pwm1.useConstantDutyCycle
 -1 5.0000000000000000E-001       0                       0                
  1   280   # pwm1.constantDutyCycle
 -1      10                       0                       0                
  1   280   # pwm1.f
 -1       0                       0                       0                
  1   280   # pwm1.startTime
 -2 5.0000000000000000E-001       0                       0                
  6   256   # pwm1.const.k
 -1       1                       0                       0                
  1   280   # pwm1.limiter.uMax
 -1       0                       0                       0                
  1   280   # pwm1.limiter.uMin
 -2       0                       0                       0                
  6   257   # pwm1.limiter.strict
 -2       2                       1                       4                
  6   258   # pwm1.limiter.homotopyType
 -2       1                       0                       0                
  6   257   # pwm1.limiter.limitsAtInit
 -2 5.0000000000000000E-001       0                       0                
  6   256   # pwm1.limiter.y
 -2       0                       0                       0                
  6   256   # pwm1.greaterEqual.u1
 -2 5.0000000000000000E-001       0                       0                
  6   320   # pwm1.greaterEqual.u2
 -2 1.0000000000000001E-001 1.0000000000000000E-013 1.0000000000000000E+100
  6   256   # pwm1.zeroOrderHold.samplePeriod
 -2       0                       0                       0                
  6   256   # pwm1.zeroOrderHold.startTime
 -2       0                       0                       0                
  6  1345   # pwm1.zeroOrderHold.sampleTrigger
 -2       0                       0                       0                
  6  1353   # pwm1.zeroOrderHold.firstTrigger
 -2 5.0000000000000000E-001       0                       0                
  6   328   # pwm1.zeroOrderHold.ySample
 -2       1                       0                       0                
  6   256   # pwm1.sawtooth.amplitude
 -2 1.0000000000000001E-001 9.9999999999999997E-061 1.0000000000000000E+100
  6   256   # pwm1.sawtooth.period
 -2      -1                       0                       0                
  6   258   # pwm1.sawtooth.nperiod
 -2       0                       0                       0                
  6   256   # pwm1.sawtooth.offset
 -2       0                       0                       0                
  6   256   # pwm1.sawtooth.startTime
 -2       1                       0                       0                
  6  1344   # pwm1.sawtooth.T_start
 -2      10                       0                       0                
  6  1346   # pwm1.sawtooth.count
 -2 4.6210214392303357E+002       0                       0                
  6   256   # inductor1.v
 -2 4.8030430877570581E+002       0                       0                
  2   280   # inductor1.i
 -2 4.8030708655815778E+002       0                       0                
  3   256   # inductor1.der(i)
 -1       1                       0                       0                
  1   280   # inductor1.L


# Matrix with 6 columns defining the initial value calculation
# (columns 5 and 6 are not utilized for the calculation but are
#  reported by dymosim via dymosim -i for user convenience):
#
# column 1: Type of initial value
#           = -2: special case: for continuing simulation (column 2 = value)
#           = -1: fixed value (column 2 = fixed value)
#           =  0: free value, i.e., no restriction (column 2 = initial value)
#           >  0: desired value (column 1 = weight for optimization
#                                column 2 = desired value)
#                 use weight=1, since automatic scaling usually
#                 leads to equally weighted terms
# column 2: fixed, free or desired value according to column 1.
# column 3: Minimum value (ignored, if Minimum >= Maximum).
# column 4: Maximum value (ignored, if Minimum >= Maximum).
#           Minimum and maximum restrict the search range in initial
#           value calculation. They might also be used for scaling.
# column 5: Category of variable.
#           = 1: parameter.
#           = 2: state.
#           = 3: state derivative.
#           = 4: output.
#           = 5: input.
#           = 6: auxiliary variable.
# column 6: Data type of variable and flags according to dsBaseType
#  <value>&3= 0: real.
#  <value>&3= 1: boolean.
#  <value>&3= 2: integer.
#
# Initial values are calculated according to the following procedure:
#
# - If parameters, states and inputs are FIXED, and other variables
#   are FREE, no special action takes place (default setting).
#
# - If there are only FIXED and FREE variables and the number of
#   FREE parameters, states and inputs is IDENTICAL to the number of
#   FIXED state derivatives, outputs and auxiliary variables, a non-linear
#   equation is solved to determine a consistent set of initial conditions.
#
# - In all other cases the following optimization problem is solved:
#      min( sum( weight(i)*( (value(i) - DESIRED(i))/scale(i) )^2 ) )
#   under the constraint that the differential equation is fulfilled
#   at the initial time. In most cases weight(i)=1 is sufficient, due
#   to the automatic scaling (if DESIRED(i) is not close to zero,
#   scale(i) = DESIRED(i). Otherwise, the scaling is based on the
#   nominal value (and maybe minimum and maximum values given in 
#   column 3 and 4). If these values are zero, scale(i)=1 is used).
#
char initialDescription(257,139)
Voltage drop of the two pins (= p.v - n.v) [V]
Current flowing from pin p to pin n [A]
der(Current flowing from pin p to pin n) [A/s]
Potential at the pin [V]
Inductance [H]
Effective resistance for hysteresis [Ohm]
Resistance at temperature T_ref [Ohm]
Reference temperature [K|degC]
Temperature coefficient of resistance (R_actual = R*(1 + alpha*(T_heatPort - T_ref)) [1/K]
Voltage drop of the two pins (= p.v - n.v) [V]
=true, if heatPort is enabled [:#(type=Boolean)]
Fixed device temperature if useHeatPort = false [K|degC]
Loss power leaving component via heatPort [W]
Actual resistance = R*(1 + alpha*(T_heatPort - T_ref)) [Ohm]
Effective resistance for transport  ac loss [Ohm]
Reactance [H]
Resistance at temperature T_ref [Ohm]
Reference temperature [K|degC]
Temperature coefficient of resistance (R_actual = R*(1 + alpha*(T_heatPort - T_ref)) [1/K]
Voltage drop of the two pins (= p.v - n.v) [V]
Current flowing from pin p to pin n [A]
Potential at the pin [V]
Potential at the pin [V]
=true, if heatPort is enabled [:#(type=Boolean)]
Fixed device temperature if useHeatPort = false [K|degC]
Loss power leaving component via heatPort [W]
Actual resistance = R*(1 + alpha*(T_heatPort - T_ref)) [Ohm]
Effective resistance for hysteresis ac loss [Ohm]
Potential at the pin [V]
= true, if support flange enabled, otherwise implicitly grounded [:#(type=Boolean)]
Transformation coefficient [N.m/A]
Voltage drop between the two pins [V]
Current flowing from positive to negative pin [A]
Angle of shaft flange with respect to support (= flange.phi - support.phi) [rad|deg]
der(Angle of shaft flange with respect to support (= flange.phi - support.phi)) [rad/s]
Angular velocity of flange relative to support [rad/s]
Potential at the pin [V]
Potential at the pin [V]
Fixed offset angle of housing [rad|deg]
Transformation coefficient of back EMF [N.m/A]
Cut torque in the flange [N.m]
Potential at the pin [V]
Current flowing into the pin [A]
Value of constant voltage [V]
Potential at the pin [V]
Resistance at temperature T_ref [Ohm]
Reference temperature [K|degC]
Temperature coefficient of resistance (R_actual = R*(1 + alpha*(T_heatPort - T_ref)) [1/K]
Voltage drop of the two pins (= p.v - n.v) [V]
Potential at the pin [V]
=true, if heatPort is enabled [:#(type=Boolean)]
Fixed device temperature if useHeatPort = false [K|degC]
Loss power leaving component via heatPort [W]
Actual resistance = R*(1 + alpha*(T_heatPort - T_ref)) [Ohm]
Voltage drop of the two pins (= p.v - n.v) [V]
Current flowing from pin p to pin n [A]
der(Current flowing from pin p to pin n) [A/s]
Inductance [H]
Current flowing into the pin [A]
Potential at the pin [V]
Impedance [Ohm]
Impedance [H]
Fuel cell voltage [V]
Value of constant voltage [V]
Potential at the pin [V]
Potential at the pin [V]
Current flowing into the pin [A]
Transistor closed resistance [Ohm]
Transistor opened conductance [S]
Transistor threshold voltage [V]
Closed diode resistance [Ohm]
Opened diode conductance [S]
Diode forward threshold voltage [V]
DC voltage side 1 [V]
DC power side 1 [W]
Potential at the pin [V]
DC voltages side 2 [V]
DC power side 2 [W]
=true, if heatPort is enabled [:#(type=Boolean)]
Fixed device temperature if useHeatPort = false [K|degC]
Loss power leaving component via heatPort [W]
Temperature of heatPort [K|degC]
true = disabled boolean input, use constantEnable [:#(type=Boolean)]
Constant enabling of firing signals [:#(type=Boolean)]
Number of phases [:#(type=Integer)]
true = disabled boolean input, use constantEnable [:#(type=Boolean)]
Constant enabling of firing signals [:#(type=Boolean)]
Number of phases [:#(type=Integer)]
Constant output value [:#(type=Boolean)]
Number of outputs [:#(type=Integer)]
Connector of Boolean output signal [:#(type=Boolean)]
Firing signal of positive potential transistor [:#(type=Boolean)]
Voltage drop of the two pins (= p.v - n.v) [V]
Current flowing from pin p to pin n [A]
Forward state-on differential resistance (closed resistance) [Ohm]
Backward state-off conductance (opened conductance) [S]
Forward threshold voltage [V]
=true, if heatPort is enabled [:#(type=Boolean)]
Fixed device temperature if useHeatPort = false [K|degC]
Loss power leaving component via heatPort [W]
Switching state [:#(type=Boolean)]
Auxiliary variable for actual position on the ideal diode characteristic [1]
[V]
[A]
Voltage drop of the two pins (= p.v - n.v) [V]
Forward state-on differential resistance (closed resistance) [Ohm]
Backward state-off conductance (opened conductance) [S]
Forward threshold voltage [V]
=true, if heatPort is enabled [:#(type=Boolean)]
Fixed device temperature if useHeatPort = false [K|degC]
Loss power leaving component via heatPort [W]
Switching state [:#(type=Boolean)]
Auxiliary variable for actual position on the ideal diode characteristic [1]
[V]
[A]
Transistor closed resistance [Ohm]
Transistor opened conductance [S]
Transistor threshold voltage [V]
Diode closed resistance [Ohm]
Diode opened conductance [S]
Diode threshold voltage [V]
Potential at the pin [V]
Potential at the pin [V]
DC voltage [V]
DC power [W]
AC power [W]
=true, if heatPort is enabled [:#(type=Boolean)]
Fixed device temperature if useHeatPort = false [K|degC]
Loss power leaving component via heatPort [W]
Temperature of heatPort [K|degC]
true = disabled boolean input, use constantEnable [:#(type=Boolean)]
Constant enabling of firing signals [:#(type=Boolean)]
Number of phases [:#(type=Integer)]
true = disabled boolean input, use constantEnable [:#(type=Boolean)]
Constant enabling of firing signals [:#(type=Boolean)]
Number of phases [:#(type=Integer)]
Constant output value [:#(type=Boolean)]
Number of outputs [:#(type=Integer)]
Connector of Boolean output signal [:#(type=Boolean)]
Firing signal of positive potential transistor [:#(type=Boolean)]
Connector of Boolean output signal [:#(type=Boolean)]
Firing signal of negative potential transistor [:#(type=Boolean)]
Voltage drop of the two pins (= p.v - n.v) [V]
Current flowing from pin p to pin n [A]
Forward state-on differential resistance (closed resistance) [Ohm]
Backward state-off conductance (opened conductance) [S]
Forward threshold voltage [V]
=true, if heatPort is enabled [:#(type=Boolean)]
Fixed device temperature if useHeatPort = false [K|degC]
Loss power leaving component via heatPort [W]
Switching state [:#(type=Boolean)]
Auxiliary variable for actual position on the ideal diode characteristic [1]
[V]
[A]
Voltage drop of the two pins (= p.v - n.v) [V]
Current flowing from pin p to pin n [A]
Forward state-on differential resistance (closed resistance) [Ohm]
Backward state-off conductance (opened conductance) [S]
Forward threshold voltage [V]
=true, if heatPort is enabled [:#(type=Boolean)]
Fixed device temperature if useHeatPort = false [K|degC]
Loss power leaving component via heatPort [W]
Switching state [:#(type=Boolean)]
Auxiliary variable for actual position on the ideal diode characteristic [1]
[V]
[A]
Voltage drop of the two pins (= p.v - n.v) [V]
Current flowing from pin p to pin n [A]
Forward state-on differential resistance (closed resistance) [Ohm]
Backward state-off conductance (opened conductance) [S]
Forward threshold voltage [V]
=true, if heatPort is enabled [:#(type=Boolean)]
Fixed device temperature if useHeatPort = false [K|degC]
Loss power leaving component via heatPort [W]
Switching state [:#(type=Boolean)]
Auxiliary variable for actual position on the ideal diode characteristic [1]
[V]
[A]
Voltage drop of the two pins (= p.v - n.v) [V]
Current flowing from pin p to pin n [A]
Forward state-on differential resistance (closed resistance) [Ohm]
Backward state-off conductance (opened conductance) [S]
Forward threshold voltage [V]
=true, if heatPort is enabled [:#(type=Boolean)]
Fixed device temperature if useHeatPort = false [K|degC]
Loss power leaving component via heatPort [W]
Switching state [:#(type=Boolean)]
Auxiliary variable for actual position on the ideal diode characteristic [1]
[V]
[A]
Voltage drop of the two pins (= p.v - n.v) [V]
Current flowing from pin p to pin n [A]
der(Current flowing from pin p to pin n) [A/s]
Inductance [H]
Moment of inertia [kg.m2]
Priority to use phi and w as states [:#(type=StateSelect)]
der(Absolute rotation angle of component) [rad/s]
Absolute angular velocity of component (= der(phi)) [rad/s]
der(Absolute angular velocity of component (= der(phi))) [rad/s2]
Absolute angular acceleration of component (= der(w)) [rad/s2]
Fixed offset angle of housing [rad|deg]
Moment of inertia of the fan blades [kg.m2]
Enables constant duty cycle [:#(type=Boolean)]
Constant duty cycle
Switching frequency [Hz]
Start time [s]
Firing PWM signal [:#(type=Boolean)]
Constant output value
Upper limits of input signals
Lower limits of input signals
= true, if strict limits with noEvent(..) [:#(type=Boolean)]
Simplified model for homotopy-based initialization [:#(type=Modelica.Blocks.Types.LimiterHomotopy)]
Has no longer an effect and is only kept for backwards compatibility (the implementation uses now the homotopy operator) [:#(type=Boolean)]
Connector of Real output signal
Connector of first Real input signal
Connector of second Real input signal
Sample period of component [s]
First sample time instant [s]
True, if sample time instant [:#(type=Boolean)]
Rising edge signals first sample instant [:#(type=Boolean)]

Amplitude of saw tooth
Time for one period [s]
Number of periods (< 0 means infinite number of periods) [:#(type=Integer)]
Offset of output signal y
Output y = offset for time < startTime [s]
Start time of current period [s]
Period count [:#(type=Integer)]
Enables constant duty cycle [:#(type=Boolean)]
Constant duty cycle
Switching frequency [Hz]
Start time [s]
Constant output value
Upper limits of input signals
Lower limits of input signals
= true, if strict limits with noEvent(..) [:#(type=Boolean)]
Simplified model for homotopy-based initialization [:#(type=Modelica.Blocks.Types.LimiterHomotopy)]
Has no longer an effect and is only kept for backwards compatibility (the implementation uses now the homotopy operator) [:#(type=Boolean)]
Connector of Real output signal
Connector of first Real input signal
Connector of second Real input signal
Sample period of component [s]
First sample time instant [s]
True, if sample time instant [:#(type=Boolean)]
Rising edge signals first sample instant [:#(type=Boolean)]

Amplitude of saw tooth
Time for one period [s]
Number of periods (< 0 means infinite number of periods) [:#(type=Integer)]
Offset of output signal y
Output y = offset for time < startTime [s]
Start time of current period [s]
Period count [:#(type=Integer)]
Voltage drop of the two pins (= p.v - n.v) [V]
Current flowing from pin p to pin n [A]
der(Current flowing from pin p to pin n) [A/s]
Inductance [H]

