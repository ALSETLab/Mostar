
clear
close all

Ts=0.005;


 
%%%% the transfer Y between Efd and Ifd has been identified based on the Mostar data 
 
 
% %%%%% I have saved in simumodel.mat Y, K1=trans*LL1*LL2*Kr, K2=lag and kkc=Kc
% (with your notations in AVR_tf.m)
 
 load simumodel
 
 %%%% IT is to be noted that the dynamics given by K1, K2 are much slower
 %%%% than the dynamics observed in Mostar. We thus forget about the Mostar
 %%%% data and we will make a simulator
 
 
 %%%% Generation of the data using the simulator using only V as excitation
 %%%% to observe the informativity problem
 
 
 t=(0:Ts:100)';   %%%% we take an experiment of 100 seconds to see the transient of the step
 V=-0.03*ones(size(t));
 V(1:1000)=zeros(1000,1);
 
 
 
 L_IV=minreal(K1*K2*Y/(1+kkc*K2*Y));
 L_EV=minreal(K1*K2/(1+kkc*K2*Y));
 
  Ifdv=lsim(L_IV,V,t);
  Efdv=lsim(L_EV,V,t);
  
  %plot(t, Efd,'b',t,Ifd,'k')
  
  data=iddata(Efdv,[V Ifdv],Ts);
  
  modelv=oe(data,[[3 1],[3 1],[0 0]]);
  
  figure(1); bode(modelv,'r',[K1*K2,-kkc*K2],'b');
  
  figure(2); compare(modelv,data)

 %%%% Generation of the data using the simulator using  V and R as
 %%%% excitation. Here the model will be perfect.
 
 L_IR=minreal(Y/(1+kkc*K2*Y));
 L_ER=minreal(1/(1+kkc*K2*Y));
 
 
 load exc_r  %excitation r with little perturbation both on Efd and Ifd
 
 %%% This excitation r creates quite a lot of perturbation on Efd, but not
 %%% on Ifd. This is due to the fact that the transfer L_IR is a low pass filter with a small cutt-off frequency (approx 1 rad/s)
 %%% while L_ER has a gain of approximately one at all frequencies.
 %%% Due to the high-frequency pole (=152 rad/s) of K_2, we however need to
 %%% keep an broad-band excitation r to capture that pole. Consequently, we
 %%% cannot filter out the high frequency of r to reduce the contribution of r on
 %%% Efd.
 
 Ifdr=lsim(L_IR,r,t);
  Efdr=lsim(L_ER,r,t);
  
  
  Ifd=Ifdr+Ifdv;
  
  Efd=Efdr+Efdv;
  
  
  outputAVR=Efd-r;
  
  data2=iddata(outputAVR,[V Ifd],Ts);
  
  
  model=oe(data2,[[3 1],[3 1],[0 0]]);
  
  figure(3); bode(model,'r',[K1*K2,-kkc*K2],'b');
  
  figure(4); compare(model,data2)
  
 figure(5); plot(t,Ifd,'r',t,Ifdv,'b')
 
 
 figure(6); plot(t,Efd,'r',t,Efdv,'b')
 
 figure(7); plot(t,V,'r')
 
 
 %%%%% The sensitivity S=L_ER=(1/(1+kkc*K2*Y)) is approximately equal to 1 for all frequencies. Consequently the
 %%%%% transfer between V and Efd (i.e. L_EV=K1*K2*S) is approximately =K1*K2. 
 %%%%% This would allow to only use the data generated by V (without r)  to get a first idea of K1*K2.
 
 S=(1/(1+kkc*K2*Y));

data3=iddata(Efdv,[V],Ts); %%% data generated by V only !!!!

modelK1K2=oe(data3,[[6 ],[6 ],[0 ]]);

figure(8); bode(modelK1K2,'r',[K1*K2],'b',[K1*K2*S],'k'); 
% We see in Figure 8 that modelK1K2 is close to the identified transfer
% function K1*K2*S, but at the same time it is also close to K1*K2. 
  
  figure(9); compare(modelK1K2,data3)