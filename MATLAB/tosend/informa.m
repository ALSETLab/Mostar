clear all
close all
Ts=0.005;

 
% load simumodel
load Capacitive_simulation
load ST5B_data
%% simulation parameters
Efd_plot = [time,Efd];
Tr = 0.01;
Tb1 = 2;
Tc1 = 20;
Tb2 = 0.02;
Tc2 = 0.005;
Kr = 500;
T1 = 0.005;
Kc = 1;
Vrmax = 4.35;
Vrmin = -3.825;
Efd0 = Efd(1);
XadIfd = Ifd(1);
Vinit = V(1);
PSS= 0;
VR0 = Efd0 + Kc*XadIfd;
 %% run ST5B simulink model
 mdl = 'ST5B';
 set_param(mdl,'SimulationCommand','Start') 
 pause(2)
 Efd_sim = out.Efd.data;
 
%% Identify model, no excitation added

V = V - mean(V(1:60));
Ifd = Ifd - mean(Ifd(1:60));
Efd1 = Efd_sim - mean(Efd_sim(1:60));
 
data=iddata(Efd1,[Ifd V],Ts);
  
  
 modelv=oe(data,[[1 3],[1 3],[1 1]]);  
 
figure(1); bode(modelv,'r',linsys1,'b');
figure(2); compare(modelv,data)
  
zpk(d2c(modelv(1)))

 
%%
 %%%% Generation of the data using the simulator using  V and R as
 %%%% excitation. Here the model will be perfect.
 
load exc_r.mat
load Capacitive_simulation_r.mat
r=r(1:901);
V = V_r;
Ifd = Ifd_r;

 
 set_param(mdl,'SimulationCommand','Start') 
 pause(2)
 Efd_sim = out.Efd.data;
 
V = V - mean(V(1:60));
Ifd = Ifd - mean(Ifd(1:60));
outputAVR=Efd_sim-r;
data2=iddata(outputAVR,[Ifd_r V_r],Ts);
model=oe(data2,[[1 3],[1 3],[1 1]]);
 
 figure(3); bode(model,'r',linsys1,'b');
 figure(4); compare(model,data2)
  
 y = compare(model,data2)

 %%
 %%%%% The sensitivity S=L_ER=(1/(1+kkc*K2*Y)) is approximately equal to 1 for all frequencies. Consequently the
 %%%%% transfer between V and Efd (i.e. L_EV=K1*K2*S) is approximately =K1*K2. 
 %%%%% This would allow to only use the data generated by V (without r)  to get a first idea of K1*K2.
 
 %S=(1/(1+kkc*K2*Y));
V=V-r;
data3=iddata(Efd_sim,[V],Ts); %%% data generated by V only !!!!

modelK1K2=oe(data3,[[6],[6 ],[0 ]]);

figure(8); bode(modelK1K2,'r',linsys1(2),'b'); 
figure(9); compare(modelK1K2,data3)


zpk((modelK1K2))
